bool canwePlace(vector<int> &stalls, int dist, int cows){
    int cntCows = 1 , last = stalls[0]; //initial placing
    for(int i= 1 ; i< stalls.size(); i++){
        if(stalls[i] - last >= dist){
            cntCows++ ;
            last = stalls[i]; //update the current allocated stall as the last one
        }
        if(cntCows >= cows) return true;
    }
    return false;
    
}
int aggressiveCows(vector<int> &stalls, int k)
{
    int n =stalls.size();
    int low = 1;
    sort(stalls.begin(),stalls.end());
    int high = stalls[n-1] - stalls[0];
    int ans = 0;
    while(low<=high){
        int mid = (low+high) / 2;
        if(canwePlace(stalls, mid , k)){
            ans = mid;
            low = mid+1;
        }
        else{
            high = mid - 1;
        }
    }
    return ans;

}
