class Solution {
public:
    int calArrays(vector<int>& arr, int limit) {
        int cnt = 1,currSum = 0;
        for (int i = 0; i < arr.size(); i++) {
            if (currSum + arr[i] <= limit) {
                currSum += arr[i];
            } else {
                currSum = arr[i];
                cnt++;
            }
        }
        return cnt;
    }
    int splitArray(vector<int>& nums, int k) {
        int low = *max_element(nums.begin(),nums.end());
        int high = accumulate(nums.begin(), nums.end(),0);

        while(low<=high){
            int mid = high +(low-high)/2;
            int possibleSol = calArrays(nums,mid);
            if(possibleSol > k) low = mid+1;
            else high = mid-1;
        }
        return low;
    }
};
