/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> zigzagLevelOrder(TreeNode* root) {
        vector<vector<int>> result;
        if(root == NULL) return result;
        queue<TreeNode*> q;
        int count = 0; //true means left to right and false means right to left
        q.push(root);
        while(1){
            int size = q.size();
            if(size == 0) return result;
            vector<int> row;
            count++;
            while(size>0){
                TreeNode* temp = q.front();
                q.pop();
                row.push_back(temp->val);
                if(temp->left) q.push(temp->left);
                if(temp->right) q.push(temp->right);
                size--;
            }
            if(count%2 == 0){
                reverse(row.begin(),row.end());
            }
            result.push_back(row);
        }
        return result;
    }
};
